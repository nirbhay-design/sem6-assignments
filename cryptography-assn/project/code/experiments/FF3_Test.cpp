#include "common/ff3.h"
#include <iostream>
#include <iomanip>


int main()
{
    u8 key[] {
        // Actual key:
        // 0xEF, 0x43, 0x59, 0xD8, 0xD5, 0x80, 0xAA, 0x4F,
        // 0x7F, 0x03, 0x6D, 0x6F, 0x04, 0xFC, 0x6A, 0x94
        // Byte-reversed key:
        0x94, 0x6A, 0xFC, 0x04, 0x6F, 0x6D, 0x03, 0x7F,
        0x4F, 0xAA, 0x80, 0xD5, 0xD8, 0x59, 0x43, 0xEF
    }; 
    std::mt19937 gen(rd());
    FF3 cipher(8, 4, 1e9, key, gen);
    u8 output[8] {};
    u8 input[8] {
        // Actual input:
        //0x0C, 0x5A, 0x58, 0x8B, 0xF9, 0x73, 0x84, 0x50
        // Input with reversed digits in base 10:
        0x19, 0xC1, 0xA5, 0x0A, 0x00, 0x01, 0x81, 0xCD
    };
    u8 tweak[8] {
        0xD8, 0xE7, 0x92, 0x0A, 0xFA, 0x33, 0x0A, 0x73
    };
    cipher.encrypt(output, input, tweak); 

    if(bytes_to_uint<u64>(output, 4) == 418819057 && bytes_to_uint<u64>(output + 4, 4) == 706456850)
        std::cout << "Test vector OK." << std::endl;
}
